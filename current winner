#define FIRMWARE_VERSION "v1.0.0"

#define UART_BAUDRATE 9600

#define MOTOR_L1_PIN 5
#define MOTOR_L2_PIN 6
#define MOTOR_R1_PIN 9
#define MOTOR_R2_PIN 10

#define LDR_PIN1 A1
#define LED_PIN1 8
#define LDR_PIN2 A2
#define LED_PIN2 7

#define ADC_RESOLUTION         10                    // 10-Bit ADC
#define ADC_OUTPUT_RANGE       (1 << ADC_RESOLUTION) // (2^10 = 1024)
#define ADC_FULL_SCALE_VOLTAGE 5.0                   // Full-Scale Voltage

#define UPDATE_PERIOD_MS 500

#define PWM_VALUE_MAX 200
#define PWM_VALUE_MIN -200

#define MOTOR_L_PWM_INITIAL_VALUE 170
#define MOTOR_R_PWM_INITIAL_VALUE 157

#define MOTOR_PWM_DECREMENT_VALUE 20

#define VARIABLE_SPEED_ENABLE 0

int LdrValue1 = 0;
int LdrValue2 = 0;

#if ((MOTOR_L_PWM_INITIAL_VALUE < PWM_VALUE_MIN) || (MOTOR_L_PWM_INITIAL_VALUE > PWM_VALUE_MAX))
  #error "MOTOR_L_PWM_INITIAL_VALUE is out of range"
#endif

#if ((MOTOR_R_PWM_INITIAL_VALUE < PWM_VALUE_MIN) || (MOTOR_R_PWM_INITIAL_VALUE > PWM_VALUE_MAX))
  #error "MOTOR_R_PWM_INITIAL_VALUE is out of range"
#endif

// Function to Set Motor Control Parameters
void SetMotorControlParameters(int PWMValue,
                               unsigned int HBridgeControlPinA,
                               unsigned int HBridgeControlPinB)
{
  if (PWMValue >= 0)
  {
    analogWrite(HBridgeControlPinB, PWMValue);
    digitalWrite(HBridgeControlPinA, LOW);
  }
  else
  {
    analogWrite(HBridgeControlPinA, -PWMValue);
    digitalWrite(HBridgeControlPinB, LOW);
  }
}

// Function to Update Motor Speed
void UpdateMotorSpeed(int LeftMotorPWMValue,
                      int RightMotorPWMValue,
                      unsigned long DurationMilliseconds)
{
  // Set Left Motor Control Parameters
  SetMotorControlParameters(LeftMotorPWMValue,
                            MOTOR_L1_PIN,
                            MOTOR_L2_PIN);
  
  // Set Right Motor Control Parameters
  SetMotorControlParameters(RightMotorPWMValue,
                            MOTOR_R1_PIN,
                            MOTOR_R2_PIN);
  
  // Add blocking delay (in ms)
  delay(DurationMilliseconds);
}

// Setup function runs once when board is powered up or reset
void setup()
{
  // Initialise UART
  Serial.begin(UART_BAUDRATE);
  
  // Initialise GPIO
  pinMode(MOTOR_L1_PIN, OUTPUT);
  pinMode(MOTOR_L2_PIN, OUTPUT);
  pinMode(MOTOR_R1_PIN, OUTPUT);
  pinMode(MOTOR_R2_PIN, OUTPUT);
  pinMode(LED_PIN1, OUTPUT);
  pinMode(LED_PIN2, OUTPUT);

  // Initialise Motor Driver
  digitalWrite(MOTOR_L1_PIN, LOW);
  digitalWrite(MOTOR_L2_PIN, LOW);
  digitalWrite(MOTOR_R1_PIN, LOW);
  digitalWrite(MOTOR_R2_PIN, LOW);
  
  // Output message to console
  Serial.println("B37VB Demonstration");
  Serial.print("Version: ");
  Serial.println(FIRMWARE_VERSION);

  #if VARIABLE_SPEED_ENABLE
    Serial.println("Variable Motor Speed Enabled");
  #endif
}

// Loop function runs over and over again forever
void loop()
{
  static int LeftMotorPWMValue  = MOTOR_L_PWM_INITIAL_VALUE;
  static int RightMotorPWMValue = MOTOR_R_PWM_INITIAL_VALUE;
  
  LdrValue1 = analogRead(LDR_PIN1);
  if(LdrValue1 < 300)
  {
    digitalWrite(LED_PIN1, HIGH);
  }
  else
  {
    digitalWrite(LED_PIN1, LOW);
  }

  LdrValue2 = analogRead(LDR_PIN2);
  if(LdrValue2 < 300)
  {
    digitalWrite(LED_PIN2, HIGH);
  }
  else
  {
    digitalWrite(LED_PIN2, LOW);
  }


  UpdateMotorSpeed(LeftMotorPWMValue,
                   RightMotorPWMValue,
                   UPDATE_PERIOD_MS);

  #if VARIABLE_SPEED_ENABLE
    if (LeftMotorPWMValue >= MOTOR_PWM_DECREMENT_VALUE)
    {
      LeftMotorPWMValue  -= MOTOR_PWM_DECREMENT_VALUE;
      RightMotorPWMValue -= MOTOR_PWM_DECREMENT_VALUE;
    }
    else
    {
      LeftMotorPWMValue  = MOTOR_L_PWM_INITIAL_VALUE;
      RightMotorPWMValue = MOTOR_R_PWM_INITIAL_VALUE;
    }
  #endif
}


// #define LDR_PIN A0
// #define LED_PIN 9
 
// int LdrValue = 0;
 
// void setup()
// {
//   pinMode(LED_PIN, OUTPUT);
// }
 
// void loop()
// {
//   LdrValue = analogRead(LDR_PIN);
//   if(LdrValue < 300)
//   {
//     digitalWrite(LED_PIN, HIGH);
//   }
//   else
//   {
//     digitalWrite(LED_PIN, LOW);
//   }
// }
